clc;
close all;
clearvars;
format long g;
format compact;

numParkings = 10;

%% Initialization
rgbTestImage = imread("parking-cars.jpg");
rgbEmptyImage = imread("parking-wo-cars.jpg");
maskImage = imread("parking-mask.jpg");

cameraFeeds = [];

for i=1:numParkings
    fileName = strcat(strcat('camera-feeds/testlp',int2str(i)),'.jpg');
    im = imread(fileName);
    im = imresize(im, [512 512]);
    cameraFeeds{i} = im;
end

%% Occupancy Detection
% Find cars
[diffImage, mask, parkedCars] = findCars(rgbEmptyImage, rgbTestImage, maskImage);

% Measure the percentage of white pixels within each rectangular mask
[props, centroids, percentageFilled] = measurePixels(mask, parkedCars);

% Visualize parking spaces
[parked, avail] = visualizeSpaces(rgbTestImage, props, centroids, percentageFilled);

%% License Plate Recognition
for i=1:numParkings
    fig=figure(2);

    if any(parked(:)==i)
        lpvalue = getLicensePlate(cameraFeeds(i));
        subplot(2,numParkings/2,i);imshow(cameraFeeds{i});
        title(strcat('license-plate:',lpvalue));
    else
        subplot(2,numParkings/2,i);imshow(cameraFeeds{i});
    title(strcat('license-plate:',int2str(i)));
    end
    
end
fig.Name = "All Parking Lots License Plate Camera";

for i=parked
    fig=figure(3);
    subplot(1,numel(parked),i);imshow(cameraFeeds{i});
    title(strcat('parking-lot-',int2str(i)));i
end
fig.Name = "All Parking Lots License Plate Camera";

